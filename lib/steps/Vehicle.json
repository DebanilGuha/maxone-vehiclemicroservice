{
  "Comment": "VAMS Lifecycle State Machine",
  "StartAt": "Inbound Vehicle",
  "States": {
    "Inbound Vehicle": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$$",
        "FunctionName": "${vehicleCreateOrUpdateArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "SNS Publish to Vehicle for Inbound to New"
    },
    "SNS Publish to Vehicle for Inbound to New": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish.waitForTaskToken",
      "Parameters": {
        "Message": {
          "Input.$": "$",
          "TaskToken.$": "$$.Task.Token"
        },
        "TopicArn": "${vehicleTopicArn}"
      },
      "Next": "New Vehicle"
    },
    "New Vehicle": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${vehicleCreateOrUpdateArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Choice to Reinvoke New"
    },
    "Choice to Reinvoke New": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.isError",
          "StringEquals": "YES",
          "Next": "SNS Publish to Vehicle for Inbound to New"
        }
      ],
      "Default": "SNS Publish to Vehicle for New to ReadyForActivation"
    },
    "SNS Publish to Vehicle for New to ReadyForActivation": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish.waitForTaskToken",
      "Parameters": {
        "Message": {
          "Input.$": "$",
          "TaskToken.$": "$$.Task.Token"
        },
        "TopicArn": "${vehicleTopicArn}"
      },
      "Next": "ReadyForActivation Vehicle"
    },
    "ReadyForActivation Vehicle": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${vehicleCreateOrUpdateArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Choice to Reinvoke ReadyForActivation"
    },
    "Choice to Reinvoke ReadyForActivation": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.isError",
          "StringEquals": "YES",
          "Next": "SNS Publish to Vehicle for New to ReadyForActivation"
        }
      ],
      "Default": "SNS Publish to Vehicle for ReadyForActivation"
    },
    "SNS Publish to Vehicle for ReadyForActivation": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "Message": {
          "Input.$": "$"
        },
        "TopicArn": "${vehicleTopicArn}"
      },
      "End": true
    }
  }
}